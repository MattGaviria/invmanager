// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using invmanager.Data;

#nullable disable

namespace invmanager.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250215052146_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("invmanager.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryDescription")
                        .HasColumnType("text");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryDescription = "Devices and gadgets for daily use, including phones, computers, and accessories.",
                            CategoryName = "Electronics"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryDescription = "Apparel and fashion items for men, women, and children.",
                            CategoryName = "Clothing"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryDescription = "Printed or digital reading materials across various genres and topics.",
                            CategoryName = "Books"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryDescription = "Items for children, including games, dolls, and educational toys.",
                            CategoryName = "Toys"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryDescription = "Home and office furnishings, such as chairs, tables, and storage units.",
                            CategoryName = "Furniture"
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryDescription = "Miscellaneous items that don't fit into the above categories.",
                            CategoryName = "Other"
                        });
                });

            modelBuilder.Entity("invmanager.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OrderId"));

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("OrderTotal")
                        .HasColumnType("double precision");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("invmanager.Models.OrderProduct", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProducts");
                });

            modelBuilder.Entity("invmanager.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("ProductCategory")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("ProductPrice")
                        .HasColumnType("double precision");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int?>("Stock")
                        .HasColumnType("integer");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            ProductCategory = "Electronics",
                            ProductName = "HP Laptop",
                            ProductPrice = 799.99000000000001,
                            Quantity = 15
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 5,
                            ProductCategory = "Furniture",
                            ProductName = "Wooden Shelf",
                            ProductPrice = 1199.99,
                            Quantity = 5
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 4,
                            ProductCategory = "Toys",
                            ProductName = "Remote Control Race Car",
                            ProductPrice = 49.990000000000002,
                            Quantity = 20
                        });
                });

            modelBuilder.Entity("invmanager.Models.OrderProduct", b =>
                {
                    b.HasOne("invmanager.Models.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("invmanager.Models.Product", "Product")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("invmanager.Models.Product", b =>
                {
                    b.HasOne("invmanager.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("invmanager.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("invmanager.Models.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("invmanager.Models.Product", b =>
                {
                    b.Navigation("OrderProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
